# 2025-07-20

Add polap-lib-version.sh
Change the version in this polap-lib-version.sh.

v0.5.2.3
1. annonate-read
2. pca-ont-kmer
3. blast-pt
Consider a few features:
select pacbio reads by using AA annotation for plastid genome assembly
select pacbio and ont reads by using PCA and UMAP for plastid genome assembly
select pacbio and ont reads using DNA annotation for plastid and mitochondrial genome assembly

# 2025-07-19

makeblastdb -in reads.fq -dbtype nucl -parse_seqids -out reads_db
blastn -query organelle_cds.fasta -db reads_db -out hits.txt -outfmt 6 -num_threads 8

# 2025-07-11

Tiara may be replaced by kmer-based pipeline.

# 2025-07-10

Download two fasta files for building minigraph gaf.

_ncbi_query="(mitochondrion[Title] AND complete[Title] AND genome[Title]) AND Viridiplantae[Organism]"
_ncbi_query="(chloroplast[Title] AND complete[Title] AND genome[Title]) AND Viridiplantae[Organism]"

I wonder if reads from mitochondrial and plastid origin could be selected using minigraph instead of minimap2.

The number of mitochondrial DNA sequences: 2301 -> about 1Gb
The number of plastid DNA sequences: 52049 -> about 10Gb

Then, map reads on the gaf database of either mitochondrial or plastid DNA to select those reads mapped.
It is like ptGAUL-minigraph version, which could be a good addition.

esearch -db nucleotide -query '((chloroplast[Title] AND complete[Title] AND genome[Title]) AND Viridiplantae[Organism]) NOT (clone[Title] OR cDNA[Title] OR mRNA[Title])' \
| efetch -format fasta > ptdna.fasta

esearch -db nucleotide -query '((mitochondrion[Title] AND complete[Title] AND genome[Title]) AND Viridiplantae[Organism]) NOT (clone[Title] OR cDNA[Title] OR mRNA[Title])' \
| efetch -format fasta > mtdna.fasta


choose one longest mtDNA sequence as the reference for mtDNA gfa.

choose the longest ptDNA sequence as the reference for ptDNA gfa.

wget ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz
mkdir ~/.taxonkit
copy dmp files to ~/.taxonkit



## prepare a gfa
seqkit split -i -O mtdna mtdna-20250710.fa
mv mtdna/mtdna.part_NC_040998.1.fa 0.fa
minigraph -cxggs 0.fa mtdna/*.fa >mtdna.gfa

seqkit split -i -O ptdna ptdna-20250710.fa
mv ptdna/ptdna.part_NC_087967.1.fa 0.fa
minigraph -cxggs 0.fa ptdna/*.fa >ptdna.gfa

find ptdna -name "ptdna/*.fa" | xargs minigraph -cxggs 0.fa > ptdna.gfa

## map ONT reads
minigraph -x lr -t 4 ptdna.gfa l.ont.fq >l.ont.gaf
## map HiFi reads
minigraph -x asm  -t 4 ptdna.gfa l.hifi.fq >l.ont.gaf
## map short reads
minigraph -x sr -t 4 ptdna.gfa l.ont.fq >l.ont.gaf

## herro error correction

data are reduced too much for R9.
for R10, I do not know the performance.

file               format  type   num_seqs        sum_len  min_len  avg_len  max_len
SRR10190639.fastq  FASTQ   DNA   3,986,825  7,736,691,155       41  1,940.6  168,597
aa.fastq.gz  FASTQ   DNA    108,121  2,103,174,798   10,000    19,452  168,579
aa.fasta     FASTA   DNA      8,466    158,849,656        8  18,763.2  130,487

scripts/preprocess.sh SRR10190639.fastq aa 16 1
seqkit seq -ni aa.fastq.gz >aa.fastq.read_ids.txt
scripts/create_batched_alignments.sh aa.fastq.gz aa.fastq.read_ids.txt 16 aa
herro inference --read-alns aa -t 4 -d 0 -m model_R9_v0.1.pt -b 32 aa.fastq.gz aa.fasta

scripts/preprocess.sh <input_fastq> <output_prefix> <number_of_threads> <parts_to_split_job_into>
seqkit seq -ni <reads> > <read_ids>
scripts/create_batched_alignments.sh <output_from_reads_preprocessing> <read_ids> <num_of_threads> <directory_for_batches_of_alignments>
herro inference --read-alns <directory_alignment_batches> -t <feat_gen_threads_per_device> -d <gpus> -m <model_path> -b <batch_size> <preprocessed_reads> <fasta_output>

git clone https://github.com/dominikstanojevic/herro.git
cd herro
conda env create --file scripts/herro-env.yml
conda install libtorch
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
export LIBTORCH=/home/goshng/miniconda3/envs/herro
export LD_LIBRARY_PATH=$LIBTORCH/lib:$LD_LIBRARY_PATH
RUSTFLAGS="-Ctarget-cpu=native" cargo build -q --release



# 2025-06-16

Replace README.md with LOG.

# 2025-06-15

conda build?
(bioconda) $ bioconda-utils build --packages dflye
anaconda login (if needed)
anaconda upload /home/goshng/miniconda3/envs/bioconda/conda-bld/linux-64

# 2025-06-13

To add one to polaplib/polap-lib-data.sh as a common subcommand to all polap-data-vX.sh:
bash polap-data-menu.sh subcommand-name
To add one to polap-data-v4.sh as a subcommand:
bash polap-data-menu.sh polap-data-v4.sh subcommand-name

# 2025-05-13

Write a function for adding a subcommand

# 2025-04-30

## pmat run errors

fuse2fs not found
gocryptfs not found

## solution

intsall apptainer to the system-wide using apt install

# 2025-04-29

We need to limit polap bioconda package to a certain python version.

requirements:
host: - python >=3.8,<3.11
run: - python >=3.8,<3.11

# 2025-04-23

Polap has proven to be an invaluable tool for my research in developing the organelle pipeline, consistently delivering development process that have significantly impacted my project's progress.
I require renaming the existing file names to ensure consistency and clarity throughout the system.

- run-polap-function-directional.sh -> polap-subcmd-directional.sh
- polap-r-data-v2-alpha0.R -> polap-r-data-v2-alpha0.R
- run-polap-py-xyz.py -> polap-py-xyz.py
- polap-lib-timing.sh: keep it that way.
- polap-data-v2.sh: keep it that way.

# 2025-04-22

directional feature
run-polap-function-directional -> the subcommand
run-polap-function-dga -> functions defined and they are called in the subcommand
run-polap-function-nextdenovo : a new machine

# 2025-04-17

sequencing data types

PacBio HiFi data
PacBio CLR data

https://github.com/bichangwei/PMAT/issues/5
https://github.com/bichangwei/PMAT/issues/5#issuecomment-1722112839
Thank you very much for using PMAT. It is primarily based on highly accurate long-read data for subsequent assembly. When the input is ONT data, it is necessary to call Nextdenovo or Canu for error correction, and this step will take a lot of time, especially for Canu. If you have assembled your nuclear genome using ONT data, you can use the corrected data as the input for PMAT, and assemble its mitochondrial genome by the following command in the latest PMAT:
PMAT autoMito -i CORRECTED_ONT_DATA -o OUTPUT -st ONT -g 2.3G -tk p1 -cpu 32

https://nextdenovo.readthedocs.io/en/latest/QSTART.html#quick-start

# 2024-12-28

## polap-constants.sh

error code

# 2024-11-16

Need to clean up this README

# 2024-10-20

Learn something about Flye:
https://github.com/mikolmogorov/Flye/blob/flye/docs/USAGE.md

not-used-snippets/ : moved scripts not used or combined.

about log

log level 0: user interaction or main steps, e.g., skipping ...
log level 1: I/O for the main steps
log level 2: details of I/O
log level 3: function-level and command executions

# 2024-10-13

## Sequence length from Fasta

https://www.biostars.org/p/118954/

# 2024-10-02

## Compare POLAP vith PMAT

conda install conda-forge::apptainer
conda install bioconda::canu
conda install bioconda::nextdenovo

https://nextdenovo.readthedocs.io/en/latest/OPTION.html

# 2024-05-01 (roughly)

## Semi-auto seed contig selection

conda install networkx
conda install gftools
conda install pandas
conda install r::r-mixr
