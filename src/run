#!/usr/bin/env bash

# required packages installation
#

# input options
LR=cpn.fq
SR1=4C-pse_1.fastq
SR2=4C-pse_2.fastq
NT=28

# utlity functions
function echoerr() { echo "$@" 1>&2; }
function echoall() {
	echo "$@" 1>&2
	echo "$@"
}

# required input file check
#

if test -z "$LR"; then
	echoerr "ERROR: No long read data set!"
	exit 1
fi
if test -z "$SR1"; then
	echoerr "ERROR: No short read data set!"
	exit 1
fi
if test -z "$SR2"; then
	echoerr "ERROR: No short read data set!"
	exit 1
fi

# required packages check
#
command -v seqkit >/dev/null 2>&1 || {
	echo >&2 "seqkit: not installed"
	exit 1
}
command -v minimap2 >/dev/null 2>&1 || {
	echo >&2 "minimap2: not installed"
	exit 1
}
command -v flye >/dev/null 2>&1 || {
	echo >&2 "flye: not installed"
	exit 1
}
command -v makeblastdb >/dev/null 2>&1 || {
	echo >&2 "makeblastdb: not installed"
	exit 1
}
command -v tblastn >/dev/null 2>&1 || {
	echo >&2 "tblastn: not installed"
	exit 1
}
command -v bedtools >/dev/null 2>&1 || {
	echo >&2 "bedtools: not installed"
	exit 1
}
command -v prefetch >/dev/null 2>&1 || {
	echo >&2 "prefetch: not installed"
	exit 1
}
command -v jellyfish >/dev/null 2>&1 || {
	echo >&2 "jellyfish: not installed"
	exit 1
}
command -v csvtk >/dev/null 2>&1 || {
	echo >&2 "csvtk: not installed"
	exit 1
}

ODIR=o
WDIR=src

# step0
mkdir -p o
echo 'INFO: o:' an output folder is created.
seqkit stats -Ta "$LR" | csvtk cut -t -f "sum_len" | csvtk del-header >"$ODIR"/long_total_length.txt
LONG_TOTAL_LENGTH=$(cat "$ODIR"/long_total_length.txt)

jellyfish count -t "$NT" -C -m 19 -s 5G -o o/19mer_out '--min-qual-char=?' 4C-pse_1.fastq 4C-pse_2.fastq
jellyfish histo -o o/19mer_out.histo o/19mer_out

"$WDIR"/run-polap-jellyfish.R "$ODIR"/19mer_out.histo "$LONG_TOTAL_LENGTH" "$ODIR"/long_coverage.txt "$ODIR"/short_expected_genome_size.txt
EXPECTED_GENOME_SIZE=$(cat "$ODIR"/short_expected_genome_size.txt)
EXPECTED_GENOME_SIZE=${EXPECTED_GENOME_SIZE%.*}
EXPECTED_COVERAGE=$(cat "$ODIR"/long_coverage.txt)
EXPECTED_COVERAGE=${EXPECTED_COVERAGE%.*}
echo "DATA: short reads expected genome size (bases): $EXPECTED_GENOME_SIZE"
echo "DATA: long reads expected coverage: ${EXPECTED_COVERAGE}x"

# step1
# seqkit seq --quiet -m 3000 --threads 4 cpn.fq -o n3k.fq.gz
echo 'DATA: long-read minimum 3kb reads data n3k.fq.gz is created'

# flye --nano-raw n3k.fq.gz --out-dir o --threads 28 --stop-after contigger --asm-coverage 30 --genome-size 98175860
flye --nano-raw n3k.fq.gz --out-dir o --threads "$NT" --stop-after contigger --asm-coverage 30 --genome-size "$EXPECTED_GENOME_SIZE" >/dev/null 2>&1
echo 'INFO: assembly graph: o/30-contigger/graph_final.gfa'

# step2
src/run-polap-annotation o "$NT" --selective-annotate --contigger

# step3
echo 'DEBUG: start of step3'
src/run-polap-mtcontig.R o o/50-annotation/mt.contig.name o/assembly_info_organelle_annotation_count.txt --contigger
echo 'INFO: o/50-annotation/mt.contig.name-1 for mtDNA contig candidates'
echo 'INFO: annotation: column -t o/assembly_info_organelle_annotation_count.txt'
echo 'DEBUG: end of step3'

# step4
echo 'DEBUG: start of step4'
STEP4=1
ADIR=o/50-annotation
MTDIR=o/60-mt-1

LR3K=n3k.fq.gz

ASSEMBLY_FASTA=o/30-contigger/contigs.fasta
MTODIR=o/60-mt-1/o3000
MTSEEDSDIR=o/60-mt-1/o3000/seeds

rm -rf o/60-mt-1/o3000
mkdir -p o/60-mt-1/o3000/seeds

seqkit grep -f o/50-annotation/mt.contig.name-1 o/30-contigger/contigs.fasta -o o/60-mt-1/contig.fa
minimap2 -cx map-ont o/60-mt-1/contig.fa n3k.fq.gz -t "$NT" -o o/60-mt-1/contig.paf
echo 'DATA: n3k.fq.gz is used to select reads'

echo 'DATA: mininmum length of long reads in the selection mapping: 3000'

MR=3000
cut -f1-11 "$MTDIR"/contig.paf | awk -v minlength=$MR '{if ($2>=minlength) {print}}' >"$MTDIR"/contig.tab

# CONTIG_LENGTH=1263302
CONTIG_LENGTH=$(seqkit stats -Ta $MTDIR/contig.fa | csvtk cut -t -f "sum_len" | csvtk del-header)

src/run-polap-pairs.R o/50-annotation/mt.contig.name-1 o/60-mt-1/contig.tab o/60-mt-1/o3000/seeds 3000 3000

# cat o/60-mt-1/o3000/seeds/2043_2044.name o/60-mt-1/o3000/seeds/2043_2841.name o/60-mt-1/o3000/seeds/2043_2848.name o/60-mt-1/o3000/seeds/2043_2849.name o/60-mt-1/o3000/seeds/2043_336.name o/60-mt-1/o3000/seeds/2043_337.name o/60-mt-1/o3000/seeds/2043_420.name o/60-mt-1/o3000/seeds/2043_421.name o/60-mt-1/o3000/seeds/2043_422.name o/60-mt-1/o3000/seeds/2043_698.name o/60-mt-1/o3000/seeds/2044_2849.name o/60-mt-1/o3000/seeds/2044_336.name o/60-mt-1/o3000/seeds/2044_337.name o/60-mt-1/o3000/seeds/2044_698.name o/60-mt-1/o3000/seeds/2841_2044.name o/60-mt-1/o3000/seeds/2841_2848.name o/60-mt-1/o3000/seeds/2841_2849.name o/60-mt-1/o3000/seeds/2841_336.name o/60-mt-1/o3000/seeds/2841_337.name o/60-mt-1/o3000/seeds/2841_420.name o/60-mt-1/o3000/seeds/2841_698.name o/60-mt-1/o3000/seeds/2848_2044.name o/60-mt-1/o3000/seeds/2848_2849.name o/60-mt-1/o3000/seeds/2848_336.name o/60-mt-1/o3000/seeds/2848_337.name o/60-mt-1/o3000/seeds/2848_698.name o/60-mt-1/o3000/seeds/2849_336.name o/60-mt-1/o3000/seeds/337_2849.name o/60-mt-1/o3000/seeds/337_336.name o/60-mt-1/o3000/seeds/420_2044.name o/60-mt-1/o3000/seeds/420_2848.name o/60-mt-1/o3000/seeds/420_2849.name o/60-mt-1/o3000/seeds/420_336.name o/60-mt-1/o3000/seeds/420_337.name o/60-mt-1/o3000/seeds/420_698.name o/60-mt-1/o3000/seeds/421_2044.name o/60-mt-1/o3000/seeds/421_2841.name o/60-mt-1/o3000/seeds/421_2848.name o/60-mt-1/o3000/seeds/421_2849.name o/60-mt-1/o3000/seeds/421_336.name o/60-mt-1/o3000/seeds/421_337.name o/60-mt-1/o3000/seeds/421_420.name o/60-mt-1/o3000/seeds/421_422.name o/60-mt-1/o3000/seeds/421_698.name o/60-mt-1/o3000/seeds/422_2044.name o/60-mt-1/o3000/seeds/422_2841.name o/60-mt-1/o3000/seeds/422_2848.name o/60-mt-1/o3000/seeds/422_2849.name o/60-mt-1/o3000/seeds/422_336.name o/60-mt-1/o3000/seeds/422_337.name o/60-mt-1/o3000/seeds/422_420.name o/60-mt-1/o3000/seeds/422_698.name o/60-mt-1/o3000/seeds/698_2849.name o/60-mt-1/o3000/seeds/698_336.name o/60-mt-1/o3000/seeds/698_337.name o/60-mt-1/o3000/seeds/single.names | sort | uniq > o/60-mt-1/o3000/seeds/1.names
cat "$MTSEEDSDIR/"*".name" $MTSEEDSDIR/single.names | sort | uniq >$MTSEEDSDIR/1.names

seqkit grep -f o/60-mt-1/o3000/seeds/1.names n3k.fq.gz -o o/60-mt-1/o3000/seeds/1.fq.gz

echo 'DATA: organelle reads in o/60-mt-1/o3000/seeds/1.fq.gz'

TOTAL_LENGTH=$(seqkit stats -Ta $MTSEEDSDIR/1.fq.gz | csvtk cut -t -f "sum_len" | csvtk del-header)
EXPECTED_COVERAGE=$((TOTAL_LENGTH / CONTIG_LENGTH))
echo "INFO: organelle genome size based on contig selection: $CONTIG_LENGTH"
echo "INFO: expected coverage: ${EXPECTED_COVERAGE}x"

echo 'DATA: no data reduction: COV=100'
ln -s 1.fq.gz o/60-mt-1/o3000/seeds/2.fq.gz

flye --nano-raw o/60-mt-1/o3000/seeds/2.fq.gz --out-dir o/60-mt-1/o3000 --asm-coverage 30 --genome-size $CONTIG_LENGTH --threads 28 >/dev/null 2>&1
echo 'INFO: assembly graph: o/60-mt-1/o3000/assembly_graph.gfa'


################################################################################
# 2nd round
# polap -4 2 -t "$NT" --use-edges
################################################################################

# step4
echo 'DEBUG: start of step4'
STEP4=2
ADIR=o/50-annotation
MTDIR=o/60-mt-${STEP4}
LR3K=n3k.fq.gz
echo 'INFO: mt.contig.name-2: edge only'
echo 'WARNING: --use-edges option is turned on'

ASSEMBLY_FASTA=o/30-contigger/graph_final.fasta
echo 'INFO: use edges not contigs: o/30-contigger/graph_final.fasta'
MTODIR=o/60-mt-${STEP4}/o3000
MTSEEDSDIR=o/60-mt-${STEP4}/o3000/seeds

rm -rf $MTODIR
mkdir -p $MTSEEDSDIR

seqkit grep -f $ADIR/mt.contig.name-$STEP4 $ASSEMBLY_FASTA -o $MTDIR/contig.fa >/dev/null 2>&1
minimap2 -cx map-ont "$MTDIR"/contig.fa "$LR3K" -t "$NT" -o "$MTDIR"/contig.paf >/dev/null 2>&1
echo 'DATA: n3k.fq.gz is used to select reads'
echo 'DATA: mininmum length of long reads in the selection mapping: 3000'

MR=3000
SINGLE_MIN=3000
cut -f1-11 "$MTDIR"/contig.paf | awk -v minlength=$MR '{if ($2>=minlength) {print}}' >"$MTDIR"/contig.tab

# CONTIG_LENGTH=1263302
CONTIG_LENGTH=$(seqkit stats -Ta $MTDIR/contig.fa | csvtk cut -t -f "sum_len" | csvtk del-header)

"$WDIR"/run-polap-pairs.R $ADIR/mt.contig.name-$STEP4 $MTDIR/contig.tab $MTSEEDSDIR $SINGLE_MIN $SINGLE_MIN >/dev/null 2>&1

# cat o/60-mt-1/o3000/seeds/2043_2044.name o/60-mt-1/o3000/seeds/2043_2841.name o/60-mt-1/o3000/seeds/2043_2848.name o/60-mt-1/o3000/seeds/2043_2849.name o/60-mt-1/o3000/seeds/2043_336.name o/60-mt-1/o3000/seeds/2043_337.name o/60-mt-1/o3000/seeds/2043_420.name o/60-mt-1/o3000/seeds/2043_421.name o/60-mt-1/o3000/seeds/2043_422.name o/60-mt-1/o3000/seeds/2043_698.name o/60-mt-1/o3000/seeds/2044_2849.name o/60-mt-1/o3000/seeds/2044_336.name o/60-mt-1/o3000/seeds/2044_337.name o/60-mt-1/o3000/seeds/2044_698.name o/60-mt-1/o3000/seeds/2841_2044.name o/60-mt-1/o3000/seeds/2841_2848.name o/60-mt-1/o3000/seeds/2841_2849.name o/60-mt-1/o3000/seeds/2841_336.name o/60-mt-1/o3000/seeds/2841_337.name o/60-mt-1/o3000/seeds/2841_420.name o/60-mt-1/o3000/seeds/2841_698.name o/60-mt-1/o3000/seeds/2848_2044.name o/60-mt-1/o3000/seeds/2848_2849.name o/60-mt-1/o3000/seeds/2848_336.name o/60-mt-1/o3000/seeds/2848_337.name o/60-mt-1/o3000/seeds/2848_698.name o/60-mt-1/o3000/seeds/2849_336.name o/60-mt-1/o3000/seeds/337_2849.name o/60-mt-1/o3000/seeds/337_336.name o/60-mt-1/o3000/seeds/420_2044.name o/60-mt-1/o3000/seeds/420_2848.name o/60-mt-1/o3000/seeds/420_2849.name o/60-mt-1/o3000/seeds/420_336.name o/60-mt-1/o3000/seeds/420_337.name o/60-mt-1/o3000/seeds/420_698.name o/60-mt-1/o3000/seeds/421_2044.name o/60-mt-1/o3000/seeds/421_2841.name o/60-mt-1/o3000/seeds/421_2848.name o/60-mt-1/o3000/seeds/421_2849.name o/60-mt-1/o3000/seeds/421_336.name o/60-mt-1/o3000/seeds/421_337.name o/60-mt-1/o3000/seeds/421_420.name o/60-mt-1/o3000/seeds/421_422.name o/60-mt-1/o3000/seeds/421_698.name o/60-mt-1/o3000/seeds/422_2044.name o/60-mt-1/o3000/seeds/422_2841.name o/60-mt-1/o3000/seeds/422_2848.name o/60-mt-1/o3000/seeds/422_2849.name o/60-mt-1/o3000/seeds/422_336.name o/60-mt-1/o3000/seeds/422_337.name o/60-mt-1/o3000/seeds/422_420.name o/60-mt-1/o3000/seeds/422_698.name o/60-mt-1/o3000/seeds/698_2849.name o/60-mt-1/o3000/seeds/698_336.name o/60-mt-1/o3000/seeds/698_337.name o/60-mt-1/o3000/seeds/single.names | sort | uniq > o/60-mt-1/o3000/seeds/1.names
cat "$MTSEEDSDIR/"*".name" $MTSEEDSDIR/single.names | sort | uniq >$MTSEEDSDIR/1.names

seqkit grep -f $MTSEEDSDIR/1.names $LR3K -o $MTSEEDSDIR/1.fq.gz >/dev/null 2>&1
echo 'DATA: organelle reads in $MTSEEDSDIR/1.fq.gz'

TOTAL_LENGTH=$(seqkit stats -Ta $MTSEEDSDIR/1.fq.gz | csvtk cut -t -f "sum_len" | csvtk del-header)
EXPECTED_COVERAGE=$((TOTAL_LENGTH / CONTIG_LENGTH))
echo "INFO: organelle genome size based on contig selection: $CONTIG_LENGTH"
echo "INFO: expected coverage: ${EXPECTED_COVERAGE}x"

echo 'DATA: no data reduction: COV=100'
# ln -s 1.fq.gz o/60-mt-1/o3000/seeds/2.fq.gz
ln -s 1.fq.gz $MTSEEDSDIR/2.fq.gz

flye --nano-raw $MTSEEDSDIR/2.fq.gz --out-dir $MTODIR --asm-coverage 30 --genome-size $CONTIG_LENGTH --threads $NT >/dev/null 2>&1
echo INFO: assembly graph: $MTODIR/assembly_graph.gfa






(polap-dev) goshng@thorne:/media/h1/backup/gingko/data/Carex/Carex_pseudochinensis/mtdna$ polap -5 -f cpseudochinensis.mt.0.fasta
+ test 0 -eq 1
+ test 0 -eq 1
+ test 0 -eq 1
+ test 0 -eq 1
+ test 0 -gt 0
+ test 1 -eq 1
+ step5
+ echo 'DEBUG: beginning of step5'
+ command -v minimap2
+ command -v samtools
+ test -z cpseudochinensis.mt.0.fasta
+ test -z ''
+ LR3K=n3k.fq.gz
+ echo 'DATA: n3k.fq.gz is used for coverage analysis'
+ [[ ! -s n3k.fq.gz ]]
+ echo INFO: long-reads assembled organelle genome in FASTA format: cpseudochinensis.mt.0.fasta
+ echo INFO: long-reads: n3k.fq.gz
+ echo INFO: number of cores: 2
+ minimap2 -t 2 -ax map-ont cpseudochinensis.mt.0.fasta n3k.fq.gz
+ samtools view -u
+ samtools sort -o 1.bam
[M::mm_idx_gen::0.047*1.01] collected minimizers
[M::mm_idx_gen::0.078*1.36] sorted minimizers
[M::main::0.078*1.36] loaded/built the index for 1 target sequence(s)
[M::mm_mapopt_update::0.083*1.34] mid_occ = 10
[M::mm_idx_stat] kmer size: 15; skip: 10; is_hpc: 0; #seq: 1
[M::mm_idx_stat::0.087*1.32] distinct minimizers: 178412 (95.99% are singletons); average occurrences: 1.045; average spacing: 5.345; total length: 996341
[M::worker_pipeline::17.255*2.04] mapped 38124 sequences
[M::worker_pipeline::39.080*2.00] mapped 37516 sequences
[M::worker_pipeline::51.962*1.91] mapped 36344 sequences
[M::worker_pipeline::64.377*1.55] mapped 27771 sequences
[M::main] Version: 2.26-r1175
[M::main] CMD: minimap2 -t 2 -ax map-ont cpseudochinensis.mt.0.fasta n3k.fq.gz
[M::main] Real time: 64.505 sec; CPU: 99.813 sec; Peak RSS: 2.039 GB
[bam_sort_core] merging from 3 files and 1 in-memory blocks...
+ samtools coverage -A -w 32 1.bam
+ echo 'DEBUG: end of step5'
+ echoerr INFO: execute: samtools coverage -A -w 32 1.bam
+ echo INFO: execute: samtools coverage -A -w 32 1.bam
INFO: execute: samtools coverage -A -w 32 1.bam
+ echoall Change your conda environment before performing STEP 6.
+ echo Change your conda environment before performing STEP 6.
Change your conda environment before performing STEP 6.
+ echo Change your conda environment before performing STEP 6.

conda activate polap-fmlrc


(polap-fmlrc) goshng@thorne:/media/h1/backup/gingko/data/Carex/Carex_pseudochinensis/mtdna$ polap -6 -a 4C-pse_1.fastq -b 4C-pse_2.fastq
+ test 0 -eq 1
+ test 0 -eq 1
+ test 0 -eq 1
+ test 0 -eq 1
+ test 0 -gt 0
+ test 0 -eq 1
+ test 1 -eq 1
+ step6
+ echo 'DEBUG: beginning of step6'
+ command -v msbwt
+ command -v ropebwt2
+ test -z 4C-pse_1.fastq
+ [[ 4C-pse_1.fastq = *.fastq ]]
+ cat 4C-pse_1.fastq 4C-pse_2.fastq
+ awk 'NR % 4 == 2'
+ sort
+ tr NT TN
+ ropebwt2 -LR
+ tr NT TN
+ msbwt convert o/msbwt
[M::main_ropebwt2] inserted 6369457709 symbols in 379.286 sec, 976.710 CPU sec
[M::main_ropebwt2] constructed FM-index in 639.918 sec, 999.039 CPU sec
[M::main_ropebwt2] symbol counts: ($, A, C, G, T, N) = (41956208, 2081341278, 1083881332, 1104689086, 24542, 2057565263)
[M::main] Version: r187
[M::main] CMD: ropebwt2 -LR
[M::main] Real time: 759.305 sec; CPU: 1117.402 sec
+ echo 'DEBUG: end of step6'


(polap-fmlrc) goshng@thorne:/media/h1/backup/gingko/data/Carex/Carex_pseudochinensis/mtdna$ polap -7 -p cpseudochinensis.mt.0.fasta -f cpseudochinensis.mt.1.fa
+ test 0 -eq 1
+ test 0 -eq 1
+ test 0 -eq 1
+ test 0 -eq 1
+ test 0 -gt 0
+ test 0 -eq 1
+ test 0 -eq 1
+ test 1 -eq 1
+ step7
+ echo 'DEBUG: beginning of step7'
+ test -z cpseudochinensis.mt.0.fasta
+ test -z cpseudochinensis.mt.1.fa
+ [[ -s cpseudochinensis.mt.0.fasta ]]
+ fmlrc -p 2 o/msbwt/comp_msbwt.npy cpseudochinensis.mt.0.fasta cpseudochinensis.mt.1.fa
+ echo 'DEBUG: end of step7'
+ set +x


GeSeq step
- Poales and manual search for Jucus family
- Ignore genes annotated as ORFs
Geneious load geseq Genbank file
- export annotation to csv
- create a Number file
GeSeq gff3 file edit
- delete source
- replace 1 with 0
Delete features
- orf with small identity 
- fragments
Trans-splicing genes
- not done
Protein product
- not done
